generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum ProductType {
  WEIGHT
  BUNCH
  PIECE
}

enum WeightUnit {
  G
  KG
  ML
  CL
  L
}

model User {
  id        String     @id @default(uuid())
  userId    String //Id from clerk
  purchases Purchase[]
}

model Product {
  id             String     @id @default(uuid())
  type           String
  subtype        String?
  microtype      String?
  timesPurchased Int?       @default(0)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  description    String?
  category       String?
  upc            String?    @unique
  brand          String?
  weight         Int        @default(0)
  Purchase       Purchase[]
  //TODO string of how product is represented on receipt (ocr)
  Price          Price[]
}

model Produce {
  id        String   @id @default(uuid())
  type      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Price     Price[]
}

//this is entering a receipt
model Purchase {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  product       Product  @relation(fields: [productId], references: [id])
  productId     String
  price         Int
  datePurchased DateTime
  onSale        Boolean
  //quantityType  ProductType
  // weightUnit    WeightUnit? should be on product
  //quantityValue Int
  fromStore     Store    @relation(fields: [storeId], references: [id])
  storeId       String
  receipt       Receipt? @relation(fields: [receiptId], references: [id])
  receiptId     String?
  submittedBy   User     @relation(fields: [userId], references: [id])
  userId        String

  @@index([userId])
  @@index([storeId])
  @@index([receiptId])
  @@index([productId])
}

model Price {
  id        String   @id @default(uuid())
  price     Int
  onSale    Boolean
  fromStore Store    @relation(fields: [storeId], references: [id])
  storeId   String
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  produce   Produce? @relation(fields: [produceId], references: [id])
  produceId String?

  @@index([storeId])
  @@index([productId])
  @@index([produceId])
}

// TODO: image of receipt for OCR stuff in future - can prob just put imge uri in Purchase model
model Receipt {
  id                 String     @id @default(uuid())
  image              String     @unique
  purchasesOnReceipt Purchase[]
}

model Store {
  id                 String     @id @default(uuid())
  name               String
  location           String
  address            Json
  lat                Int?
  long               Int?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  purchasesFromStore Purchase[]
  Price              Price[]
}
